{
  "rules": {
    ".read": false,
    ".write": false,

    "users": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('admins').child(auth.uid).val() === true",
        ".write": "($uid === auth.uid && !data.exists()) || root.child('admins').child(auth.uid).val() === true",
        "balances": { ".write": "root.child('admins').child(auth.uid).val() === true" },
        "cooldown": { ".write": "root.child('admins').child(auth.uid).val() === true" },
        "banned": { ".write": "root.child('admins').child(auth.uid).val() === true" },
        "referral": { ".write": "($uid === auth.uid && !data.child('referrerId').exists()) || root.child('admins').child(auth.uid).val() === true" }
      }
    },

    "transactions": {
      "$uid": {
        ".read": "$uid === auth.uid || root.child('admins').child(auth.uid).val() === true",
        ".write": "root.child('admins').child(auth.uid).val() === true"
      }
    },

    "referrals": {
      "$referrer": {
        ".read": "$referrer === auth.uid || root.child('admins').child(auth.uid).val() === true",
        ".write": "root.child('admins').child(auth.uid).val() === true"
      }
    },

    "referralRewards": {
      "$referrer": {
        ".read": "$referrer === auth.uid || root.child('admins').child(auth.uid).val() === true",
        ".write": "root.child('admins').child(auth.uid).val() === true"
      }
    },

    "tasks": {
      ".read": "auth != null",
      ".write": "root.child('admins').child(auth.uid).val() === true"
    },

    "taskSubmissions": {
      "$taskId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "$submission": {
          ".validate": "newData.hasChildren(['taskId','userId','status','createdAt']) && ( (!data.exists() && newData.child('userId').val() === auth.uid && newData.child('status').val() === 'Pending') || (data.exists() && root.child('admins').child(auth.uid).val() === true) )"
        }
      }
    },

    "withdrawals": {
      ".read": "root.child('admins').child(auth.uid).val() === true",
      ".write": "auth != null",
      "$id": {
        ".validate": "newData.hasChildren(['userId','amount','uid','asset','method','status','createdAt']) && ( (!data.exists() && newData.child('userId').val() === auth.uid && newData.child('status').val() === 'Pending') || (data.exists() && root.child('admins').child(auth.uid).val() === true) )"
      }
    },

    "settings": {
      ".read": "auth != null",
      ".write": "root.child('admins').child(auth.uid).val() === true"
    },

    "admins": {
      ".read": "root.child('admins').child(auth.uid).val() === true",
      ".write": "root.child('admins').child(auth.uid).val() === true"
    }
  }
}


